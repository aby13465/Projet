{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amine\\\\Desktop\\\\Projet\\\\client\\\\src\\\\Categories\\\\Categories.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Table, Dialog, DialogTitle, DialogActions, DialogContent, TableCell, TableContainer, TableHead, TableRow, TableBody, TextField, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  btnSpacing: {\n    margin: theme.spacing(0, 1, 1, 0)\n  }\n}));\nexport default function Categories() {\n  const classes = useStyles();\n  const [nom, setNom] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const refreshRows = () => {\n    axios.post(\"/categories/recherche\", {}).then(resultat => {\n      setRows(resultat.data);\n    });\n  };\n\n  useEffect(() => {\n    refreshRows();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    fullWidth: true,\n    onClose: () => {\n      setOpen(false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Ajouter Cat\\xE9gorie\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: nom,\n    onChange: event => {\n      setNom(event.target.value);\n    },\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"nom\",\n    label: \"Nom\",\n    name: \"nom\",\n    autoComplete: \"nom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      axios.post(\"/categories/ajouter\", {\n        nom: nom\n      }, {\n        headers: {\n          Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n        }\n      }).then(() => {\n        setRows([]);\n        setOpen(false);\n        refreshRows();\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Confirmer\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => {\n      setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Annuler\"))), React.createElement(Button, {\n    color: \"primary\",\n    className: classes.btnSpacing,\n    onClick: () => {\n      setOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Ajouter Cat\\xE9gorie\"), React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Nom\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, row._id), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, row.nom), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => {\n      axios.post(\"http://localhost:4000/categories/supprimer\", {\n        _id: row._id\n      }, {\n        headers: {\n          Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n        }\n      }).then(() => {\n        setRows([]);\n        refreshRows();\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Supprimer\"))))))));\n}","map":{"version":3,"sources":["C:/Users/Amine/Desktop/Projet/client/src/Categories/Categories.js"],"names":["React","useEffect","useState","makeStyles","Paper","Table","Dialog","DialogTitle","DialogActions","DialogContent","TableCell","TableContainer","TableHead","TableRow","TableBody","TextField","Button","axios","useStyles","theme","table","minWidth","btnSpacing","margin","spacing","Categories","classes","nom","setNom","rows","setRows","open","setOpen","refreshRows","post","then","resultat","data","event","target","value","headers","Authorization","localStorage","getItem","map","row","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  btnSpacing: {\r\n    margin: theme.spacing(0, 1, 1, 0),\r\n  },\r\n}));\r\n\r\nexport default function Categories() {\r\n  const classes = useStyles();\r\n  const [nom, setNom] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const refreshRows = () => {\r\n    axios\r\n      .post(\"/categories/recherche\", {})\r\n      .then((resultat) => {\r\n        setRows(resultat.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshRows();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        fullWidth\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Ajouter Catégorie</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            value={nom}\r\n            onChange={(event) => {\r\n              setNom(event.target.value);\r\n            }}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"nom\"\r\n            label=\"Nom\"\r\n            name=\"nom\"\r\n            autoComplete=\"nom\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              axios\r\n                .post(\r\n                  \"/categories/ajouter\",\r\n                  {\r\n                    nom: nom,\r\n                  },\r\n                  {\r\n                    headers: {\r\n                      Authorization:\r\n                        \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                    },\r\n                  }\r\n                )\r\n                .then(() => {\r\n                  setRows([]);\r\n                  setOpen(false);\r\n                  refreshRows();\r\n                });\r\n            }}\r\n          >\r\n            Confirmer\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Annuler\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Button\r\n        color=\"primary\"\r\n        className={classes.btnSpacing}\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n      >\r\n        Ajouter Catégorie\r\n      </Button>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Nom</TableCell>\r\n              <TableCell align=\"center\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow>\r\n                <TableCell>{row._id}</TableCell>\r\n                <TableCell>{row.nom}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      axios\r\n                        .post(\r\n                          \"http://localhost:4000/categories/supprimer\",\r\n                          {\r\n                            _id: row._id,\r\n                          },\r\n                          {\r\n                            headers: {\r\n                              Authorization:\r\n                                \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                            },\r\n                          }\r\n                        )\r\n                        .then(() => {\r\n                          setRows([]);\r\n                          refreshRows();\r\n                        });\r\n                    }}\r\n                  >\r\n                    Supprimer\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}