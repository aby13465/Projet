{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\Clients\\\\Clients.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(id, nom, prenom, email, cree) {\n  return {\n    id,\n    nom,\n    prenom,\n    email,\n    cree\n  };\n}\n\nconst rows = [];\nexport default function Clients() {\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/clients/getclients\", {}, {\n      headers: {\n        Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n      }\n    }).then(resultat => {\n      console.log(resultat.map(e => {\n        return e;\n      }));\n    });\n  }, []);\n  const classes = useStyles();\n  return React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Nom\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Prenom\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Mot de passe\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Date de cr\\xE9ation\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, row.calories), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, row.fat), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, row.carbs), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, row.protein))))));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/Clients/Clients.js"],"names":["React","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","axios","useStyles","table","minWidth","createData","id","nom","prenom","email","cree","rows","Clients","post","headers","Authorization","localStorage","getItem","then","resultat","console","log","map","e","classes","row","name","calories","fat","carbs","protein"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(id, nom, prenom, email, cree) {\r\n  return { id, nom, prenom, email, cree };\r\n}\r\n\r\nconst rows = [];\r\n\r\nexport default function Clients() {\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/clients/getclients\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n          },\r\n        }\r\n      )\r\n      .then((resultat) => {\r\n        console.log(\r\n          resultat.map((e) => {\r\n            return e;\r\n          })\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>ID</TableCell>\r\n            <TableCell align=\"right\">Nom</TableCell>\r\n            <TableCell align=\"right\">Prenom</TableCell>\r\n            <TableCell align=\"right\">E-mail</TableCell>\r\n            <TableCell align=\"right\">Mot de passe</TableCell>\r\n            <TableCell align=\"right\">Date de cr√©ation</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}