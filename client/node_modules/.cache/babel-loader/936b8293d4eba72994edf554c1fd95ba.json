{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\Clients\\\\Clients.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  formcontrol: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function Clients(props) {\n  const [id, setId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nom, setNom] = useState(\"\");\n  const [prenom, setPrenom] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const tableHeadActions = () => {\n    if (props.type === \"administrateur\") return React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Actions\");\n  };\n\n  const tableBodyActions = row => {\n    if (props.type === \"administrateur\") return React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => {\n        setOpen(true);\n        setId(row._id);\n        setNom(row.nom);\n        setPrenom(row.prenom);\n        setEmail(row.email);\n        setTelephone(row.telephone);\n        setType(t => row.administrateur ? \"Administrateur\" : row.moderateur ? \"Moderateur\" : \"Client\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Modifier\"), React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => {\n        axios.post(\"http://localhost:4000/clients/supprimerclient\", {\n          _id: row._id\n        }, {\n          headers: {\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n          }\n        }).then(() => {\n          setRows([]);\n          refreshRows();\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Supprimer\"));\n  };\n\n  const refreshRows = () => {\n    axios.post(\"http://localhost:4000/clients/getclients\", {}, {\n      headers: {\n        Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n      }\n    }).then(resultat => {\n      resultat.data.forEach(r => {\n        setRows(rows => [...rows, {\n          _id: r._id,\n          nom: r.nom,\n          prenom: r.prenom,\n          email: r.email,\n          telephone: r.telephone,\n          cree: r.cree,\n          administrateur: r.administrateur,\n          moderateur: r.moderateur\n        }]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    refreshRows();\n  }, []);\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    fullWidth: true,\n    onClose: () => {\n      setOpen(false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Modifier\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: nom,\n    onChange: event => setNom(event.target.value),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"nom\",\n    label: \"Nom\",\n    name: \"nom\",\n    autoComplete: \"nom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: prenom,\n    onChange: event => setPrenom(event.target.value),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"prenom\",\n    label: \"Pr\\xE9nom\",\n    name: \"prenom\",\n    autoComplete: \"prenom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: telephone,\n    onChange: event => setTelephone(event.target.value),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"telephone\",\n    label: \"T\\xE9l\\xE9phone\",\n    name: \"telephone\",\n    autoComplete: \"telephone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: classes.formcontrol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Type\"), React.createElement(RadioGroup, {\n    row: true,\n    defaultValue: type,\n    onChange: event => {\n      setType(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"Administrateur\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }),\n    label: \"Administrateur\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"Moderateur\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }),\n    label: \"Moderateur\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"Client\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }),\n    label: \"Client\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      axios.post(\"http://localhost:4000/clients/modifierclient\", {\n        _id: id,\n        nom: nom,\n        prenom: prenom,\n        email: email,\n        telephone: telephone,\n        administrateur: type === \"Administrateur\",\n        moderateur: type === \"Administrateur\" || type === \"Moderateur\"\n      }, {\n        headers: {\n          Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n        }\n      }).then(() => {\n        setRows([]);\n        setOpen(false);\n        refreshRows();\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Confirmer\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => {\n      setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"Annuler\"))), React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Nom\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Prenom\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"T\\xE9l\\xE9phone\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Type\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Date de cr\\xE9ation\"), tableHeadActions())), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, row._id), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, row.nom), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, row.prenom), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, row.email), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, row.telephone), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, row.administrateur ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, \"Administrateur\") : row.moderateur ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"Moderateur\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \"Client\")), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, row.cree), tableBodyActions(row)))))));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/Clients/Clients.js"],"names":["React","useState","useEffect","makeStyles","Table","TextField","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","axios","useStyles","theme","table","minWidth","formcontrol","margin","spacing","Clients","props","id","setId","email","setEmail","nom","setNom","prenom","setPrenom","telephone","setTelephone","type","setType","rows","setRows","open","setOpen","tableHeadActions","tableBodyActions","row","_id","t","administrateur","moderateur","post","headers","Authorization","localStorage","getItem","then","refreshRows","resultat","data","forEach","r","cree","classes","event","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport {\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  formcontrol: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Clients(props) {\r\n  const [id, setId] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nom, setNom] = useState(\"\");\r\n  const [prenom, setPrenom] = useState(\"\");\r\n  const [telephone, setTelephone] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const tableHeadActions = () => {\r\n    if (props.type === \"administrateur\")\r\n      return <TableCell align=\"center\">Actions</TableCell>;\r\n  };\r\n\r\n  const tableBodyActions = (row) => {\r\n    if (props.type === \"administrateur\")\r\n      return (\r\n        <TableCell align=\"center\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setOpen(true);\r\n              setId(row._id);\r\n              setNom(row.nom);\r\n              setPrenom(row.prenom);\r\n              setEmail(row.email);\r\n              setTelephone(row.telephone);\r\n              setType((t) =>\r\n                row.administrateur\r\n                  ? \"Administrateur\"\r\n                  : row.moderateur\r\n                  ? \"Moderateur\"\r\n                  : \"Client\"\r\n              );\r\n            }}\r\n          >\r\n            Modifier\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:4000/clients/supprimerclient\",\r\n                  { _id: row._id },\r\n                  {\r\n                    headers: {\r\n                      Authorization:\r\n                        \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                    },\r\n                  }\r\n                )\r\n                .then(() => {\r\n                  setRows([]);\r\n                  refreshRows();\r\n                });\r\n            }}\r\n          >\r\n            Supprimer\r\n          </Button>\r\n        </TableCell>\r\n      );\r\n  };\r\n\r\n  const refreshRows = () => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/clients/getclients\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n          },\r\n        }\r\n      )\r\n      .then((resultat) => {\r\n        resultat.data.forEach((r) => {\r\n          setRows((rows) => [\r\n            ...rows,\r\n            {\r\n              _id: r._id,\r\n              nom: r.nom,\r\n              prenom: r.prenom,\r\n              email: r.email,\r\n              telephone: r.telephone,\r\n              cree: r.cree,\r\n              administrateur: r.administrateur,\r\n              moderateur: r.moderateur,\r\n            },\r\n          ]);\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshRows();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        fullWidth\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Modifier</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            value={nom}\r\n            onChange={(event) => setNom(event.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"nom\"\r\n            label=\"Nom\"\r\n            name=\"nom\"\r\n            autoComplete=\"nom\"\r\n          />\r\n          <TextField\r\n            value={prenom}\r\n            onChange={(event) => setPrenom(event.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"prenom\"\r\n            label=\"Prénom\"\r\n            name=\"prenom\"\r\n            autoComplete=\"prenom\"\r\n          />\r\n          <TextField\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n          />\r\n          <TextField\r\n            value={telephone}\r\n            onChange={(event) => setTelephone(event.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"telephone\"\r\n            label=\"Téléphone\"\r\n            name=\"telephone\"\r\n            autoComplete=\"telephone\"\r\n          />\r\n          <FormControl className={classes.formcontrol}>\r\n            <FormLabel>Type</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              defaultValue={type}\r\n              onChange={(event) => {\r\n                setType(event.target.value);\r\n              }}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Administrateur\"\r\n                control={<Radio />}\r\n                label=\"Administrateur\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Moderateur\"\r\n                control={<Radio />}\r\n                label=\"Moderateur\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Client\"\r\n                control={<Radio />}\r\n                label=\"Client\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:4000/clients/modifierclient\",\r\n                  {\r\n                    _id: id,\r\n                    nom: nom,\r\n                    prenom: prenom,\r\n                    email: email,\r\n                    telephone: telephone,\r\n                    administrateur: type === \"Administrateur\",\r\n                    moderateur:\r\n                      type === \"Administrateur\" || type === \"Moderateur\",\r\n                  },\r\n                  {\r\n                    headers: {\r\n                      Authorization:\r\n                        \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                    },\r\n                  }\r\n                )\r\n                .then(() => {\r\n                  setRows([]);\r\n                  setOpen(false);\r\n                  refreshRows();\r\n                });\r\n            }}\r\n          >\r\n            Confirmer\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Annuler\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Nom</TableCell>\r\n              <TableCell>Prenom</TableCell>\r\n              <TableCell>E-mail</TableCell>\r\n              <TableCell>Téléphone</TableCell>\r\n              <TableCell>Type</TableCell>\r\n              <TableCell>Date de création</TableCell>\r\n              {tableHeadActions()}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow>\r\n                <TableCell>{row._id}</TableCell>\r\n                <TableCell>{row.nom}</TableCell>\r\n                <TableCell>{row.prenom}</TableCell>\r\n                <TableCell>{row.email}</TableCell>\r\n                <TableCell>{row.telephone}</TableCell>\r\n                <TableCell>\r\n                  {row.administrateur ? (\r\n                    <div>Administrateur</div>\r\n                  ) : row.moderateur ? (\r\n                    <div>Moderateur</div>\r\n                  ) : (\r\n                    <div>Client</div>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{row.cree}</TableCell>\r\n                {tableBodyActions(row)}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}