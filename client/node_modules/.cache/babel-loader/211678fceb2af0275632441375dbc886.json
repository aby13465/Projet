{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amine\\\\Desktop\\\\Projet\\\\client\\\\src\\\\ClientRoute\\\\ClientRoute.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nexport default function ClientRoute({\n  component: Component,\n  ...rest\n}) {\n  const [type, setType] = useState(null);\n  useEffect(() => {\n    if (!localStorage.getItem(\"jwt-cookie\")) {\n      setType(\"visiteur\");\n    }\n\n    axios.post(\"/clients/type\", {}, {\n      headers: {\n        Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n      }\n    }).then(resultat => {\n      setType(resultat.data);\n    });\n  }, []);\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (type === \"administrateur\" || type === \"moderateur\" || type === \"client\") {\n        return React.createElement(Component, Object.assign({}, props, {\n          type: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      } else if (type === \"visiteur\") {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/Connexion\",\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Amine/Desktop/Projet/client/src/ClientRoute/ClientRoute.js"],"names":["React","useEffect","useState","Route","Redirect","axios","ClientRoute","component","Component","rest","type","setType","localStorage","getItem","post","headers","Authorization","then","resultat","data","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAArB,EAAwD;AACrE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACvCF,MAAAA,OAAO,CAAC,UAAD,CAAP;AACD;;AACDN,IAAAA,KAAK,CACFS,IADH,CAEI,eAFJ,EAGI,EAHJ,EAII;AACEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYJ,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADX,KAJJ,EAUGI,IAVH,CAUSC,QAAD,IAAc;AAClBP,MAAAA,OAAO,CAACO,QAAQ,CAACC,IAAV,CAAP;AACD,KAZH;AAaD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SACE,oBAAC,KAAD,oBACMV,IADN;AAEE,IAAA,MAAM,EAAGW,KAAD,IAAW;AACjB,UACEV,IAAI,KAAK,gBAAT,IACAA,IAAI,KAAK,YADT,IAEAA,IAAI,KAAK,QAHX,EAIE;AACA,eAAO,oBAAC,SAAD,oBAAeU,KAAf;AAAsB,UAAA,IAAI,EAAEV,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAND,MAMO,IAAIA,IAAI,KAAK,UAAb,EAAyB;AAC9B,eACE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEW,YAAAA,QAAQ,EAAE,YAAZ;AAA0BC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAjC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAkBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ClientRoute({ component: Component, ...rest }) {\r\n  const [type, setType] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"jwt-cookie\")) {\r\n      setType(\"visiteur\");\r\n    }\r\n    axios\r\n      .post(\r\n        \"/clients/type\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n          },\r\n        }\r\n      )\r\n      .then((resultat) => {\r\n        setType(resultat.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (\r\n          type === \"administrateur\" ||\r\n          type === \"moderateur\" ||\r\n          type === \"client\"\r\n        ) {\r\n          return <Component {...props} type={type} />;\r\n        } else if (type === \"visiteur\") {\r\n          return (\r\n            <Redirect to={{ pathname: \"/Connexion\", state: { from: props.location } }} />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}