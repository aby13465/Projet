{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\Clients\\\\Clients.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport default function Clients() {\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const refreshRows = () => {\n    axios.post(\"http://localhost:4000/clients/getclients\", {}, {\n      headers: {\n        Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n      }\n    }).then(resultat => {\n      resultat.data.forEach(r => {\n        setRows(rows => [...rows, {\n          _id: r._id,\n          nom: r.nom,\n          prenom: r.prenom,\n          email: r.email,\n          cree: r.cree\n        }]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    refreshRows();\n  }, []);\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    minWidth: \"lg\",\n    onClose: () => {\n      setOpen(false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Modifier\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Confirmer\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => {\n      setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Annuler\"))), React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Nom\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Prenom\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Date de cr\\xE9ation\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, row._id), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, row.nom), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, row.prenom), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, row.email), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, row.cree), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      setOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Modifier\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => {\n      axios.post(\"http://localhost:4000/clients/supprimerclient\", {\n        _id: row._id\n      }, {\n        headers: {\n          Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n        }\n      }).then(() => {\n        setRows([]);\n        refreshRows();\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Supprimer\"))))))));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/Clients/Clients.js"],"names":["React","useState","useEffect","makeStyles","Table","TextField","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Dialog","DialogTitle","DialogContent","DialogActions","axios","useStyles","table","minWidth","Clients","rows","setRows","open","setOpen","refreshRows","post","headers","Authorization","localStorage","getItem","then","resultat","data","forEach","r","_id","nom","prenom","email","cree","classes","map","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport {\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function Clients() {\r\n  const [rows, setRows] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const refreshRows = () => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/clients/getclients\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n          },\r\n        }\r\n      )\r\n      .then((resultat) => {\r\n        resultat.data.forEach((r) => {\r\n          setRows((rows) => [\r\n            ...rows,\r\n            {\r\n              _id: r._id,\r\n              nom: r.nom,\r\n              prenom: r.prenom,\r\n              email: r.email,\r\n              cree: r.cree,\r\n            },\r\n          ]);\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshRows();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        minWidth=\"lg\"\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Modifier</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\">Confirmer</Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Annuler\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Nom</TableCell>\r\n              <TableCell>Prenom</TableCell>\r\n              <TableCell>E-mail</TableCell>\r\n              <TableCell>Date de création</TableCell>\r\n              <TableCell align=\"center\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow>\r\n                <TableCell>{row._id}</TableCell>\r\n                <TableCell>{row.nom}</TableCell>\r\n                <TableCell>{row.prenom}</TableCell>\r\n                <TableCell>{row.email}</TableCell>\r\n                <TableCell>{row.cree}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      setOpen(true);\r\n                    }}\r\n                  >\r\n                    Modifier\r\n                  </Button>\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      axios\r\n                        .post(\r\n                          \"http://localhost:4000/clients/supprimerclient\",\r\n                          { _id: row._id },\r\n                          {\r\n                            headers: {\r\n                              Authorization:\r\n                                \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                            },\r\n                          }\r\n                        )\r\n                        .then(() => {\r\n                          setRows([]);\r\n                          refreshRows();\r\n                        });\r\n                    }}\r\n                  >\r\n                    Supprimer\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}