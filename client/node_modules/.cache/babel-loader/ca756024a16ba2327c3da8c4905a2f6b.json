{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\Inscription\\\\Inscription.js\";\nimport React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Inscription(props) {\n  const classes = useStyles();\n  const [alert, setAlert] = useState(\"\");\n  const [nom, setNom] = useState(\"\");\n  const [prenom, setPrenom] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passe, setPasse] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (nom === \"\" || prenom === \"\" || email === \"\" || passe === \"\" || telephone === \"\") {\n      setAlert(() => React.createElement(Alert, {\n        severity: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Veuillez remplir tous vos coordonnees\"));\n      setTimeout(() => {\n        setAlert(\"\");\n      }, 5000);\n    } else {\n      axios.post(\"http://localhost:4000/clients/ajouter\", {\n        nom: nom,\n        prenom: prenom,\n        email: email,\n        passe: passe,\n        telephone: telephone\n      }).then(response => {\n        if (response.data === \"Client ajoutÃ©\") {\n          window.location = \"/Connexion\";\n        } else {\n          setAlert(() => React.createElement(Alert, {\n            severity: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \"Veuillez verifiez vos coordonnees\"));\n          setTimeout(() => {\n            setAlert(\"\");\n          }, 5000);\n        }\n      });\n    }\n  };\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Inscription\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, alert, React.createElement(TextField, {\n    margin: \"normal\",\n    autoComplete: \"nom\",\n    name: \"nom\",\n    id: \"nom\",\n    variant: \"outlined\",\n    value: nom,\n    onChange: event => setNom(event.target.value),\n    required: true,\n    fullWidth: true,\n    label: \"Nom\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"normal\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: prenom,\n    onChange: event => setPrenom(event.target.value),\n    id: \"prenom\",\n    label: \"Pr\\xE9nom\",\n    name: \"prenom\",\n    autoComplete: \"prenom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"normal\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"normal\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: passe,\n    onChange: event => setPasse(event.target.value),\n    name: \"passe\",\n    label: \"Mot de passe\",\n    type: \"password\",\n    id: \"passe\",\n    autoComplete: \"passe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"normal\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: telephone,\n    onChange: event => setTelephone(event.target.value),\n    name: \"telephone\",\n    label: \"Num\\xE9ro Telephone\",\n    id: \"telephone\",\n    autoComplete: \"telephone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Inscription\"))));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/Inscription/Inscription.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","LockOutlinedIcon","Typography","makeStyles","Container","Alert","axios","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Inscription","props","classes","alert","setAlert","nom","setNom","prenom","setPrenom","email","setEmail","passe","setPasse","telephone","setTelephone","handleSubmit","event","preventDefault","setTimeout","post","then","response","data","window","location","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Inscription(props) {\r\n  const classes = useStyles();\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [nom, setNom] = useState(\"\");\r\n  const [prenom, setPrenom] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [passe, setPasse] = useState(\"\");\r\n  const [telephone, setTelephone] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      nom === \"\" ||\r\n      prenom === \"\" ||\r\n      email === \"\" ||\r\n      passe === \"\" ||\r\n      telephone === \"\"\r\n    ) {\r\n      setAlert(() => (\r\n        <Alert severity=\"error\">Veuillez remplir tous vos coordonnees</Alert>\r\n      ));\r\n      setTimeout(() => {\r\n        setAlert(\"\");\r\n      }, 5000);\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:4000/clients/ajouter\", {\r\n          nom: nom,\r\n          prenom: prenom,\r\n          email: email,\r\n          passe: passe,\r\n          telephone: telephone,\r\n        })\r\n        .then((response) => {\r\n          if (response.data === \"Client ajoutÃ©\") {\r\n            window.location = \"/Connexion\";\r\n          } else {\r\n            setAlert(() => (\r\n              <Alert severity=\"error\">Veuillez verifiez vos coordonnees</Alert>\r\n            ));\r\n            setTimeout(() => {\r\n              setAlert(\"\");\r\n            }, 5000);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Inscription\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          {alert}\r\n          <TextField\r\n            margin=\"normal\"\r\n            autoComplete=\"nom\"\r\n            name=\"nom\"\r\n            id=\"nom\"\r\n            variant=\"outlined\"\r\n            value={nom}\r\n            onChange={(event) => setNom(event.target.value)}\r\n            required\r\n            fullWidth\r\n            label=\"Nom\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={prenom}\r\n            onChange={(event) => setPrenom(event.target.value)}\r\n            id=\"prenom\"\r\n            label=\"PrÃ©nom\"\r\n            name=\"prenom\"\r\n            autoComplete=\"prenom\"\r\n          />\r\n\r\n          <TextField\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={passe}\r\n            onChange={(event) => setPasse(event.target.value)}\r\n            name=\"passe\"\r\n            label=\"Mot de passe\"\r\n            type=\"password\"\r\n            id=\"passe\"\r\n            autoComplete=\"passe\"\r\n          />\r\n\r\n          <TextField\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={telephone}\r\n            onChange={(event) => setTelephone(event.target.value)}\r\n            name=\"telephone\"\r\n            label=\"NumÃ©ro Telephone\"\r\n            id=\"telephone\"\r\n            autoComplete=\"telephone\"\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Inscription\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}