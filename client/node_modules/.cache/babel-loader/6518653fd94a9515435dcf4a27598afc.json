{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\Inscription\\\\Inscription.js\";\nimport React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(2)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Inscription(props) {\n  const classes = useStyles();\n  const [Alert, setAlert] = useState(\"\");\n  const [nom, setNom] = useState(\"\");\n  const [prenom, setPrenom] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passe, setPasse] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (email === \"\" || passe === \"\") {\n      setAlert(() => React.createElement(Alert, {\n        severity: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Veuillez remplir tous vos coordonnees\"));\n      setTimeout(() => {\n        setAlert(\"\");\n      }, 5000);\n    } //  else {\n    //   axios.post(\"http://localhost:4000/clients/ajouter\", {\n    //     nom: nom,\n    //     prenom: prenom,\n    //     email: email,\n    //     passe: passe\n    //   });\n    //   window.location = \"/\";\n    // }\n\n  };\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Inscription\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, Alert, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"nom\",\n    name: \"nom\",\n    id: \"nom\",\n    variant: \"outlined\",\n    value: nom,\n    onChange: event => setNom(event.target.value),\n    required: true,\n    fullWidth: true,\n    label: \"Nom\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: prenom,\n    onChange: event => setPrenom(event.target.value),\n    id: \"prenom\",\n    label: \"Pr\\xE9nom\",\n    name: \"prenom\",\n    autoComplete: \"prenom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    value: passe,\n    onChange: event => setPasse(event.target.value),\n    name: \"passe\",\n    label: \"Mot de passe\",\n    type: \"password\",\n    id: \"passe\",\n    autoComplete: \"passe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Inscription\"))));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/Inscription/Inscription.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Grid","LockOutlinedIcon","Typography","makeStyles","Container","axios","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Inscription","props","classes","Alert","setAlert","nom","setNom","prenom","setPrenom","email","setEmail","passe","setPasse","handleSubmit","event","preventDefault","setTimeout","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAD8B;AAOrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAP6B;AAWrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfZ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAX+B;AAerCY,EAAAA,MAAM,EAAE;AACNP,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAf6B,CAAL,CAAN,CAA5B;AAoBA,eAAe,SAASa,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiC,GAAD,EAAMC,MAAN,IAAgBlC,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACmC,MAAD,EAASC,SAAT,IAAsBpC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACqC,KAAD,EAAQC,QAAR,IAAoBtC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuC,KAAD,EAAQC,QAAR,IAAoBxC,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMyC,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIN,KAAK,KAAK,EAAV,IAAgBE,KAAK,KAAK,EAA9B,EAAkC;AAChCP,MAAAA,QAAQ,CAAC,MACP,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADM,CAAR;AAGAY,MAAAA,UAAU,CAAC,MAAM;AACfZ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAEU,KARgB,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAlBD;;AAoBA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACjB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEiB,OAAO,CAACX,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAOE;AAAM,IAAA,QAAQ,EAAEsB,YAAhB;AAA8B,IAAA,SAAS,EAAEX,OAAO,CAACL,IAAjD;AAAuD,IAAA,UAAU,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KADH,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,EAAE,EAAC,KAHL;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,KAAK,EAAEE,GALT;AAME,IAAA,QAAQ,EAAES,KAAK,IAAIR,MAAM,CAACQ,KAAK,CAACG,MAAN,CAAaC,KAAd,CAN3B;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,SAAS,MARX;AASE,IAAA,KAAK,EAAC,KATR;AAUE,IAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAgBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAEX,MAJT;AAKE,IAAA,QAAQ,EAAEO,KAAK,IAAIN,SAAS,CAACM,KAAK,CAACG,MAAN,CAAaC,KAAd,CAL9B;AAME,IAAA,EAAE,EAAC,QANL;AAOE,IAAA,KAAK,EAAC,WAPR;AAQE,IAAA,IAAI,EAAC,QARP;AASE,IAAA,YAAY,EAAC,QATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,EA6BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAET,KAJT;AAKE,IAAA,QAAQ,EAAEK,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd,CAL7B;AAME,IAAA,EAAE,EAAC,OANL;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,IAAI,EAAC,OARP;AASE,IAAA,YAAY,EAAC,OATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7BF,EA0CE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAEP,KAJT;AAKE,IAAA,QAAQ,EAAEG,KAAK,IAAIF,QAAQ,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAL7B;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,KAAK,EAAC,cAPR;AAQE,IAAA,IAAI,EAAC,UARP;AASE,IAAA,EAAE,EAAC,OATL;AAUE,IAAA,YAAY,EAAC,OAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1CF,CADF,EA0DE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEhB,OAAO,CAACH,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1DF,CAPF,CAFF,CADF;AAiFD","sourcesContent":["import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function Inscription(props) {\r\n  const classes = useStyles();\r\n  const [Alert, setAlert] = useState(\"\");\r\n  const [nom, setNom] = useState(\"\");\r\n  const [prenom, setPrenom] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [passe, setPasse] = useState(\"\");\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (email === \"\" || passe === \"\") {\r\n      setAlert(() => (\r\n        <Alert severity=\"error\">Veuillez remplir tous vos coordonnees</Alert>\r\n      ));\r\n      setTimeout(() => {\r\n        setAlert(\"\");\r\n      }, 5000);}\r\n    //  else {\r\n    //   axios.post(\"http://localhost:4000/clients/ajouter\", {\r\n    //     nom: nom,\r\n    //     prenom: prenom,\r\n    //     email: email,\r\n    //     passe: passe\r\n    //   });\r\n    //   window.location = \"/\";\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Inscription\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            {Alert}\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"nom\"\r\n                name=\"nom\"\r\n                id=\"nom\"\r\n                variant=\"outlined\"\r\n                value={nom}\r\n                onChange={event => setNom(event.target.value)}\r\n                required\r\n                fullWidth\r\n                label=\"Nom\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={prenom}\r\n                onChange={event => setPrenom(event.target.value)}\r\n                id=\"prenom\"\r\n                label=\"Prénom\"\r\n                name=\"prenom\"\r\n                autoComplete=\"prenom\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={email}\r\n                onChange={event => setEmail(event.target.value)}\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={passe}\r\n                onChange={event => setPasse(event.target.value)}\r\n                name=\"passe\"\r\n                label=\"Mot de passe\"\r\n                type=\"password\"\r\n                id=\"passe\"\r\n                autoComplete=\"passe\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Inscription\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}