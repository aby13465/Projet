{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\Clients\\\\Clients.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport default function Clients(props) {\n  const [id, setId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nom, setNom] = useState(\"\");\n  const [prenom, setPrenom] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const tableHeadActions = () => {\n    if (props.type === \"administrateur\") return React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Actions\");\n  };\n\n  const tableBodyActions = row => {\n    if (props.type === \"administrateur\") return React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => {\n        setOpen(true);\n        setId(row._id);\n        setNom(row.nom);\n        setPrenom(row.prenom);\n        setEmail(row.email);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Modifier\"), React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => {\n        axios.post(\"http://localhost:4000/clients/supprimerclient\", {\n          _id: row._id\n        }, {\n          headers: {\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n          }\n        }).then(() => {\n          setRows([]);\n          refreshRows();\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Supprimer\"));\n  };\n\n  const refreshRows = () => {\n    axios.post(\"http://localhost:4000/clients/getclients\", {}, {\n      headers: {\n        Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n      }\n    }).then(resultat => {\n      resultat.data.forEach(r => {\n        setRows(rows => [...rows, {\n          _id: r._id,\n          nom: r.nom,\n          prenom: r.prenom,\n          email: r.email,\n          cree: r.cree\n        }]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    refreshRows();\n  }, []);\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    fullWidth: true,\n    onClose: () => {\n      setOpen(false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Modifier\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: nom,\n    onChange: event => setNom(event.target.value),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"nom\",\n    label: \"Nom\",\n    name: \"nom\",\n    autoComplete: \"nom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: prenom,\n    onChange: event => setPrenom(event.target.value),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"prenom\",\n    label: \"Pr\\xE9nom\",\n    name: \"prenom\",\n    autoComplete: \"prenom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      axios.post(\"http://localhost:4000/clients/modifierclient\", {\n        _id: id,\n        nom: nom,\n        prenom: prenom,\n        email: email\n      }, {\n        headers: {\n          Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n        }\n      }).then(() => {\n        setRows([]);\n        setOpen(false);\n        refreshRows();\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Confirmer\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: () => {\n      setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Annuler\"))), React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Nom\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Prenom\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Type\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Date de cr\\xE9ation\"), tableHeadActions())), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, row._id), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, row.nom), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, row.prenom), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, row.email), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, row.administrateur ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Administrateur\") : row.moderateur ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"Moderateur\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Client\")), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, row.cree), tableBodyActions(row)))))));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/Clients/Clients.js"],"names":["React","useState","useEffect","makeStyles","Table","TextField","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Dialog","DialogTitle","DialogContent","DialogActions","axios","useStyles","table","minWidth","Clients","props","id","setId","email","setEmail","nom","setNom","prenom","setPrenom","rows","setRows","open","setOpen","tableHeadActions","type","tableBodyActions","row","_id","post","headers","Authorization","localStorage","getItem","then","refreshRows","resultat","data","forEach","r","cree","classes","event","target","value","map","administrateur","moderateur"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport {\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function Clients(props) {\r\n  const [id, setId] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nom, setNom] = useState(\"\");\r\n  const [prenom, setPrenom] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const tableHeadActions = () => {\r\n    if (props.type === \"administrateur\")\r\n      return <TableCell align=\"center\">Actions</TableCell>;\r\n  };\r\n\r\n  const tableBodyActions = (row) => {\r\n    if (props.type === \"administrateur\")\r\n      return (\r\n        <TableCell align=\"center\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setOpen(true);\r\n              setId(row._id);\r\n              setNom(row.nom);\r\n              setPrenom(row.prenom);\r\n              setEmail(row.email);\r\n            }}\r\n          >\r\n            Modifier\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:4000/clients/supprimerclient\",\r\n                  { _id: row._id },\r\n                  {\r\n                    headers: {\r\n                      Authorization:\r\n                        \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                    },\r\n                  }\r\n                )\r\n                .then(() => {\r\n                  setRows([]);\r\n                  refreshRows();\r\n                });\r\n            }}\r\n          >\r\n            Supprimer\r\n          </Button>\r\n        </TableCell>\r\n      );\r\n  };\r\n\r\n  const refreshRows = () => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/clients/getclients\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n          },\r\n        }\r\n      )\r\n      .then((resultat) => {\r\n        resultat.data.forEach((r) => {\r\n          setRows((rows) => [\r\n            ...rows,\r\n            {\r\n              _id: r._id,\r\n              nom: r.nom,\r\n              prenom: r.prenom,\r\n              email: r.email,\r\n              cree: r.cree,\r\n            },\r\n          ]);\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshRows();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        fullWidth\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Modifier</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            value={nom}\r\n            onChange={(event) => setNom(event.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"nom\"\r\n            label=\"Nom\"\r\n            name=\"nom\"\r\n            autoComplete=\"nom\"\r\n          />\r\n          <TextField\r\n            value={prenom}\r\n            onChange={(event) => setPrenom(event.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"prenom\"\r\n            label=\"Prénom\"\r\n            name=\"prenom\"\r\n            autoComplete=\"prenom\"\r\n          />\r\n          <TextField\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              axios\r\n                .post(\r\n                  \"http://localhost:4000/clients/modifierclient\",\r\n                  {\r\n                    _id: id,\r\n                    nom: nom,\r\n                    prenom: prenom,\r\n                    email: email,\r\n                  },\r\n                  {\r\n                    headers: {\r\n                      Authorization:\r\n                        \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                    },\r\n                  }\r\n                )\r\n                .then(() => {\r\n                  setRows([]);\r\n                  setOpen(false);\r\n                  refreshRows();\r\n                });\r\n            }}\r\n          >\r\n            Confirmer\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Annuler\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Nom</TableCell>\r\n              <TableCell>Prenom</TableCell>\r\n              <TableCell>E-mail</TableCell>\r\n              <TableCell>Type</TableCell>\r\n              <TableCell>Date de création</TableCell>\r\n              {tableHeadActions()}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow>\r\n                <TableCell>{row._id}</TableCell>\r\n                <TableCell>{row.nom}</TableCell>\r\n                <TableCell>{row.prenom}</TableCell>\r\n                <TableCell>{row.email}</TableCell>\r\n                <TableCell>\r\n                  {row.administrateur ? (\r\n                    <div>Administrateur</div>\r\n                  ) : row.moderateur ? (\r\n                    <div>Moderateur</div>\r\n                  ) : (\r\n                    <div>Client</div>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{row.cree}</TableCell>\r\n                {tableBodyActions(row)}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}