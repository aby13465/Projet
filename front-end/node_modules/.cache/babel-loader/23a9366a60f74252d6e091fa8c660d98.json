{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\ModerateurRoute\\\\ModerateurRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport default function ModerateurRoute({\n  component: Component,\n  ...rest\n}) {\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!localStorage.getItem(\"jwt-cookie\")) {\n        return React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/ModerateurRoute/ModerateurRoute.js"],"names":["React","Route","Redirect","ModerateurRoute","component","Component","rest","props","localStorage","getItem","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAzB,EAA4D;AACzE,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf,UAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACvC,eAAO,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFD,MAEO;AACL,eACE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEG,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAAxB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function ModerateurRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!localStorage.getItem(\"jwt-cookie\")) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}