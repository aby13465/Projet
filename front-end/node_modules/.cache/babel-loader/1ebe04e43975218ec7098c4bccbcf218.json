{"ast":null,"code":"var _jsxFileName = \"E:\\\\projetpfe\\\\front-end\\\\src\\\\ModerateurRoute\\\\ModerateurRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nexport default function ModerateurRoute({\n  component: Component,\n  ...rest\n}) {\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!localStorage.getItem(\"jwt-cookie\")) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      } else {\n        let r;\n        axios.post(\"http://localhost:4000/clients/estmoderateur\", {}, {\n          headers: {\n            Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\")\n          }\n        }).then(resultat => r = resultat.data);\n        if (r) return React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));else return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["E:/projetpfe/front-end/src/ModerateurRoute/ModerateurRoute.js"],"names":["React","Route","Redirect","axios","ModerateurRoute","component","Component","rest","props","localStorage","getItem","pathname","state","from","location","r","post","headers","Authorization","then","resultat","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAzB,EAA4D;AACzE,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACvC,eACE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAAxB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJD,MAIO;AACL,YAAIC,CAAJ;AACAZ,QAAAA,KAAK,CACFa,IADH,CAEI,6CAFJ,EAGI,EAHJ,EAII;AACEC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAE,YAAYT,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADX,SAJJ,EAUGS,IAVH,CAUSC,QAAD,IAAeL,CAAC,GAAGK,QAAQ,CAACC,IAVpC;AAWA,YAAIN,CAAJ,EAAO,OAAO,oBAAC,SAAD,oBAAeP,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP,CAAP,KAEE,OACE,oBAAC,QAAD;AACE,UAAA,EAAE,EAAE;AAAEG,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAAxB,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKH;AACF,KA5BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAgCD","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ModerateurRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!localStorage.getItem(\"jwt-cookie\")) {\r\n          return (\r\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n          );\r\n        } else {\r\n          let r;\r\n          axios\r\n            .post(\r\n              \"http://localhost:4000/clients/estmoderateur\",\r\n              {},\r\n              {\r\n                headers: {\r\n                  Authorization: \"bearer \" + localStorage.getItem(\"jwt-cookie\"),\r\n                },\r\n              }\r\n            )\r\n            .then((resultat) => (r = resultat.data));\r\n          if (r) return <Component {...props} />;\r\n          else\r\n            return (\r\n              <Redirect\r\n                to={{ pathname: \"/\", state: { from: props.location } }}\r\n              />\r\n            );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}