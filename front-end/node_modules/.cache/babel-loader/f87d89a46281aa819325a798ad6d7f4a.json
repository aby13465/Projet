{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the avatar elements. */\n    avatar: {\n      border: \"2px solid \".concat(theme.palette.background.default),\n      marginLeft: -8\n    }\n  };\n};\nvar AvatarGroup = React.forwardRef(function AvatarGroup(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"spacing\"]);\n\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  });\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children.map(function (child, index) {\n    return React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        zIndex: children.length - index,\n        marginLeft: spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Spacing between avatars.\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);","map":{"version":3,"sources":["E:/projetpfe/front-end/node_modules/@material-ui/lab/esm/AvatarGroup/AvatarGroup.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","isFragment","clsx","withStyles","SPACINGS","small","medium","styles","theme","root","display","avatar","border","concat","palette","background","default","marginLeft","AvatarGroup","forwardRef","props","ref","childrenProp","children","classes","className","_props$spacing","spacing","other","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","createElement","map","index","cloneElement","style","zIndex","length","undefined","propTypes","node","object","string","oneOfType","oneOf","number","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the avatar elements. */\n    avatar: {\n      border: \"2px solid \".concat(theme.palette.background.default),\n      marginLeft: -8\n    }\n  };\n};\nvar AvatarGroup = React.forwardRef(function AvatarGroup(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"spacing\"]);\n\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  });\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children.map(function (child, index) {\n    return React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        zIndex: children.length - index,\n        marginLeft: spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Spacing between avatars.\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);"]},"metadata":{},"sourceType":"module"}